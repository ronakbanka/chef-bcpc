---
# variables defined in here can be moved to group_vars/all if you want to share
# them between multiple clusters

################################################
# CLUSTER INFORMATION
################################################
# cluster name (should match Chef environment name and env in inventory)
cluster_name: Test-Laptop-Ansible

# IP address of apt mirror (bootstrap node IP)
cluster_apt_mirror: 10.0.100.3

# head node VIP
cluster_vip: 10.0.100.5

# set to the FQDN of the bootstrap node using hostname+hypervisor domain
chef_server: bcpc-bootstrap.hypervisor-bcpc.example.com

################################################
# CLUSTER ACCESS AND CREDENTIALS
################################################
# public key for operations user
operations_key: "ssh-rsa blah"

# path to private key for operations user
ansible_ssh_private_key_file: /put/privkey/here

# IPMI username and password (only used by hardware)
ipmi_username: username
ipmi_password: password

################################################
# LOCAL PATHS
################################################
# git-staging used for staging Git ZIP archives before transferring to bootstrap node
controlnode_git_staging_dir: /set/to/a/real/path

# files directory for miscellaneous packages/files used to stand up bootstrap node
# (this is the same as the BOOTSTRAP_CACHE_DIR from the Vagrant build process, so
# just copy the contents of that directory in here into a subdirectory with the
# version of BCPC you are deploying)
controlnode_files_dir: /set/to/a/real/path

# local mirror of apt repos to distribute to bootstrap node
# provide the dir that has mirror/skel/var dirs in it, not
# the path to the mirror dir itself
# (this is passed to rsync with an / appended to the end)
controlnode_apt_mirror_dir: /set/to/a/real/path

# invoke bootstrap/shared/shared_prereqs.sh to update file cache
# (disable if you do not have Internet access)
update_bcpc_local_cache: true

# set this variable here for all clusters or in group_vars for an
# individual cluster to seek out prebuilt binaries instead of building
# on the bootstrap node
use_prebuilt_binaries: false

# when doing local builds, setting this to true will mount the apt mirror
# via VirtualBox shared folders rather than rsyncing it
# (only has an effect if bootstrap node's hardware type is Virtual)
# NOTE: if you already synced and then turn this on, it will not remove the
# existing mirrored files (just mounts over it)
apt_mirror_via_vboxsf: false

# lists of users to add or remove from the bootstrap node
# will be skipped if not defined
#allowed_users:
#- username: xxx
#  public_key: yyy

#revoked_users:
#- username: xxx

################################################
# COOKBOOK CONFIGURATIONS
################################################
# version of chef-bcpc to deploy
# this is used to locate ZIP files/binary build directories
# (if you are deploying from a local directory you can leave this on master
# even if you have a different branch checked out)
chef_bcpc_version: master

# this is a magic variable that if defined will attempt to deploy chef-bcpc
# from the specified directory instead of a ZIP file named
# chef-bcpc-{{ chef_bcpc_version }}.zip
# (use this when iterating locally and not from a particular release)
chef_bcpc_deploy_from_dir: /deploy/chef-bcpc/from/here/

# chef_bcpc_prop is a special cookbook that overlays onto chef_bcpc
# leave commented out if not in use, will be skipped if not defined
#chef_bcpc_prop_version: master

# internal_cookbooks is for deploying additional cookbooks that are not
# overlays or dependencies and can be found in git-staging, e.g.:
#internal_cookbooks:
#- cookbook: blah
#  version:  1.0.0
internal_cookbooks: []

# these cookbooks are obtained by looking for a .tar.gz in
# bootstrap-files/cookbooks with the appropriate name and version
dependency_cookbooks:
- cookbook: apt
  version: 1.10.0
- cookbook: concat
  version: 0.3.0
- cookbook: cron
  version: 1.6.1
- cookbook: hostsfile
  version: 2.4.5
- cookbook: logrotate
  version: 1.6.0
- cookbook: ntp
  version: 1.8.6
- cookbook: ubuntu
  version: 1.1.8
- cookbook: yum
  version: 3.2.2

################################################
# CHEF PACKAGE VERSIONS
################################################
# Chef package names
chef_server_deb: chef-server-core_12.0.8-1_amd64.deb
chef_client_deb: chef_12.3.0-1_amd64.deb

################################################
# REMOTE PATHS
# (these should not need to be changed)
################################################
# where data goes on the bootstrap node
bootstrap_staging_dir: /bcpc
bootstrap_files_dir: "{{ bootstrap_staging_dir }}/bootstrap-files"
bootstrap_git_staging_dir: "{{ bootstrap_staging_dir }}/git-staging"
bootstrap_apt_mirror_dir: "{{ bootstrap_staging_dir }}/apt-mirror"
bootstrap_deployed_dir: "{{ bootstrap_staging_dir }}/deployed"
bootstrap_mirror_root_dir: "{{ bootstrap_staging_dir }}/mirror-root"

################################################
# APT MIRROR SYMLINK PATHS
# (these should not need to be changed unless upstream repos change)
################################################
# default dictionary to map mirror paths (override per cluster as needed)
mirror_path_map:
  ceph: download.ceph.com/debian-hammer
  elasticsearch: packages.elasticsearch.org/elasticsearch/1.5/debian
  erlang: packages.erlang-solutions.com/ubuntu/
  fluentd: packages.treasuredata.com/2/ubuntu/trusty
  haproxy: ppa.launchpad.net/vbernat/haproxy-1.5/ubuntu
  hwraid: hwraid.le-vert.net/ubuntu
  kibana: packages.elasticsearch.org/kibana/4.1/debian
  mysql: repo.percona.com/apt
  openstack: ubuntu-cloud.archive.canonical.com/ubuntu
  rabbitmq: www.rabbitmq.com/debian
  ubuntu: mirror.pnl.gov/ubuntu
  zabbix: repo.zabbix.com/zabbix/2.4/ubuntu
