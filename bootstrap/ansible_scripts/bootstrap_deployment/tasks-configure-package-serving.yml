---
  - name: Perform synchronization of local bootstrap files
    synchronize: src={{ controlnode_files_dir }}/ dest={{ bootstrap_files_dir }}/
    tags:
      - synchronize

  # ensure shared folder is not mounted if user has toggled apt_mirror_via_vboxsf
  - name: Ensure VirtualBox shared folder for apt mirror is not mounted
    mount: name={{ bootstrap_apt_mirror_dir }} src=apt-mirror fstype=vboxsf state=absent
    when: not apt_mirror_via_vboxsf and hardware_type == "Virtual"

  # leave / on the end of src path so rsync doesn't put the mirror dir inside the dest dir!
  - name: Perform synchronization of local apt mirror (can take a long while)
    synchronize: src={{ controlnode_apt_mirror_dir }}/ dest={{ bootstrap_apt_mirror_dir }}
    when: not apt_mirror_via_vboxsf
    tags:
      - synchronize

  # VirtualBox shared folder mechanism is more involved (some might say tortured)
  - name: Check for gcc
    shell: which gcc
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual"
    register: gcc_found

  - name: Fail if gcc not installed
    fail: msg="gcc must be installed in order to compile VirtualBox kernel extensions"
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and gcc_found.rc != 0

  - name: Check for VirtualBox shared folder for apt mirror
    local_action: shell VBoxManage showvminfo bcpc-bootstrap --machinereadable | egrep -q 'SharedFolderNameMachineMapping\d+="apt-mirror"'
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual"
    register: apt_mirror_shared_folder_configured
    ignore_errors: true

  - name: Power down bootstrap VM to create shared folder
    local_action: command VBoxManage controlvm bcpc-bootstrap acpipowerbutton
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Wait for bootstrap VM to power off
    local_action: pause seconds=10
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Create VirtualBox shared folder for apt mirror directory
    local_action: command VBoxManage sharedfolder add {{ inventory_hostname }} --name apt-mirror --hostpath {{ controlnode_apt_mirror_dir }} --readonly
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Power on bootstrap VM
    local_action: command VBoxManage startvm bcpc-bootstrap
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Wait for bootstrap VM to become available via SSH
    local_action: wait_for host={{ ansible_ssh_host }} port=22 delay=10 state=started
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Check for mount.vboxsf binary
    stat: path=/sbin/mount.vboxsf
    register: vboxsf_stat

  - name: Mount VirtualBox guest additions ISO to /media (do not store in fstab)
    command: mount -o loop {{ bootstrap_files_dir }}/{{ chef_bcpc_version }}/VBoxGuestAdditions_5.0.10.iso /media
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and not vboxsf_stat.stat.exists

  - name: Install VirtualBox guest additions
    command: /media/VBoxLinuxAdditions.run -- --force
    register: vbox_guest_additions_install
    failed_when: "'Building the shared folder support module ...done.' not in vbox_guest_additions_install.stderr"
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and not vboxsf_stat.stat.exists

  - name: Unmount VirtualBox guest additions ISO
    command: umount /media
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and not vboxsf_stat.stat.exists

  - name: Reboot bootstrap VM after changing kernel modules
    command: shutdown -r now
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Wait for bootstrap VM to become available via SSH
    local_action: wait_for host={{ ansible_ssh_host }} port=22 delay=10 state=started
    become: no
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and apt_mirror_shared_folder_configured.rc != 0

  - name: Load vboxsf kernel module
    command: modprobe vboxsf
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual" and not vboxsf_stat.stat.exists

  - name: Mount VirtualBox apt mirror shared folder
    mount: name={{ bootstrap_apt_mirror_dir }} src=apt-mirror fstype=vboxsf state=mounted
    when: apt_mirror_via_vboxsf and hardware_type == "Virtual"
    # VirtualBox shared folder done

  - name: Move default Ubuntu sources.list away
    command: mv /etc/apt/sources.list /etc/apt/sources.list.orig creates=/etc/apt/sources.list.orig

  - name: Bootstrap local apt with local filesystem fragment
    template: src=templates/sources.list.j2 dest=/etc/apt/sources.list.d/localfile_sources.list owner=root group=root mode=0644
    tags:
      - configure_apt

  - name: Drop multi-arch support
    file: path=/etc/dpkg/dpkg.cfg.d/multiarch state=absent
    tags:
      - configure_apt

  - name: Run apt-get update
    apt: update_cache=yes
    tags:
      - configure_apt

  - name: Install packages
    apt: name={{ item }} state=present
    with_items:
      - git
      - sshpass
      - emacs23
      - vim
      - unzip
    tags:
      - configure_apt

  - name: Install Apache web server to serve package mirrors
    apt: name=apache2 state=present

  - name: Create directory to serve package mirrors from for Apache
    file: path={{ bootstrap_mirror_root_dir }} state=directory owner=root group=root mode=0755

  - name: Create Apache web site
    template: src=templates/apache_apt_mirror.j2 dest=/etc/apache2/sites-available/apt-mirror.conf owner=root group=root mode=0644

  - name: Disable Apache2 default web site
    command: a2dissite 000-default removes=/etc/apache2/sites-enabled/000-default.conf

  - name: Enable Apache2 apt-mirror web site
    command: a2ensite apt-mirror creates=/etc/apache2/sites-enabled/apt-mirror.conf

  - name: Optimistically map mirror paths into serving directory (some may not exist, but don't freak out)
    file: path={{ bootstrap_mirror_root_dir }}/{{ item.key }} state=link src={{ bootstrap_apt_mirror_dir }}/mirror/{{ item.value }} force=yes
    with_dict: "{{ mirror_path_map }}"

  - name: Restart Apache
    service: name=apache2 state=restarted

    # Ubuntu installer writes proxy information into /etc/apt/apt.conf, overwrite it here
  - name: Ensure local apt mirror can be reached directly
    template: src=templates/apt.conf.j2 dest=/etc/apt/apt.conf owner=root group=root mode=0644

  - name: Create directory under mirror root to hold Chef client packages
    file: path={{ bootstrap_mirror_root_dir }}/chef-client state=directory owner=root group=root mode=0755

  - name: Copy Chef client package to web-accessible directory
    command: cp {{ bootstrap_files_dir }}/{{ chef_bcpc_version }}/{{ chef_client_deb }} {{ bootstrap_mirror_root_dir }}/chef-client/ creates={{ bootstrap_mirror_root_dir }}/chef-client/{{ chef_client_deb }}
